= trinidad-dbpool

Trinidad extensions to support database connection pools configured into the Apache Tomcat
container.

== Pools supported

* MySql (trinidad_mysql_dbpool_extension)
* PostgreSQL (trinidad_postgresql_dbpool_extension)
* Mssql (trinidad_mssql_dbpool_extension)
* Oracle (trinidad_oracle_dbpool_extension)

== Usage

* Install the extension gem, ie: jruby -S gem install trinidad_mysql_dbpool_extension
* Configure the pool into the trinidad's configuration file, ie:

  web_apps:
    default:
      extensions:
        mysql_dbpool:                                   # EXTENSION NAME AS KEY
          jndi: 'jdbc/TestDB'                           # jndi name
          username: 'root'                              # database username
          password: 'root'                              # database password
          url: 'jdbc:mysql://localhost:3306/javatest'   # database url
          maxActive: 100                                # max nodes actives
          maxIdle: 30                                   # max nodes idles
          maxWait: 10000                                # max nodes waiting

_jndi_, _username_, _password_ and _url_ are mandatory, while other
configuration options can be found here:

http://tomcat.apache.org/tomcat-6.0-doc/jndi-datasource-examples-howto.html

http://commons.apache.org/dbcp/configuration.html

* Configure your rails application to use jndi into the config/database.yml

  production:
    adapter: jdbc
    jndi: java:/comp/env/jdbc/TestDB
    driver: com.mysql.jdbc.Driver     # jdbc driver is mandatory

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010 David Calavera. See LICENSE for details.
